stages:
    - quality
    - frontend
    - unit
    - functional
    - performances
    - deployment

cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
        - vendor/
        - node_modules/
        - public/build/

insight:
    stage: quality
    image: php:fpm-alpine
    before_script:
        - curl -o insight.phar -s http://get.insight.sensiolabs.com/insight.phar
    script:
        - php insight.phar analyze --no-interaction --no-ansi $INSIGHT_PROJECT_UUID --reference=$CI_COMMIT_SHA --user-uuid=$INSIGHT_USER_UUID --api-token=$INSIGHT_USER_API_KEY --fail-condition="counts.critical > 0"
    allow_failure: true

deptrac:
    stage: quality
    image: php:fpm-alpine
    before_script:
        - curl -LS http://get.sensiolabs.de/deptrac.phar -o deptrac.phar
        - chmod +x deptrac.phar
        - mv ./deptrac.phar /usr/bin/deptrac
    script:
        - deptrac

#encore:
#    stage: frontend
#    image: node:alpine
#    before_script:
#        - yarn install
#    script:
#        - ./node_modules/.bin/encore production

phpunit:
    stage: unit
    image: php:fpm-alpine
    services:
        - redis
    before_script:
        - php -vv
        - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
        - php composer-setup.php
        - php -r "unlink('composer-setup.php');"
        - apk add --no-cache zlib-dev
        - docker-php-ext-configure zlib --with-dir/usr/local/zlib \
             && docker-php-ext-install zip
        - docker-php-ext-install zip
        - echo $GOOGLE_CLOUD_SERVICE_ACCOUNT_FILE > $CI_PROJECT_DIR/tests/_credentials/credentials.json
        - echo $GOOGLE_CLOUD_SERVICE_ACCOUNT_FILE > $CI_PROJECT_DIR/config/credentials/google/credentials.json
        - echo $GOOGLE_CLOUD_SERVICE_ACCOUNT_FILE > $CI_PROJECT_DIR/features/assets/_credentials/credentials.json
        - php composer.phar install -a -o
        - php composer.phar dump-autoload -a -o
        - cp $CI_PROJECT_DIR/.env.gitlab.dist $CI_PROJECT_DIR/.env
        - cp $CI_PROJECT_DIR/gitlab_phpunit.xml.dist $CI_PROJECT_DIR/phpunit.xml
    script:
        - php $CI_PROJECT_DIR/bin/console d:d:c --env=test
        - php $CI_PROJECT_DIR/bin/console d:s:c --env=test
        - php $CI_PROJECT_DIR/bin/console d:f:l -n --env=test
        - php $CI_PROJECT_DIR/bin/console doctrine:cache:clear-query
        - php $CI_PROJECT_DIR/bin/console doctrine:cache:clear-metadata
        - php $CI_PROJECT_DIR/bin/phpunit -v --exclude-group Blackfire

behat_core:
    stage: functional
    image: php:fpm-alpine
    services:
        - redis
    before_script:
        - php -vv
        - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
        - php composer-setup.php
        - php -r "unlink('composer-setup.php');"
        - php composer.phar install -n --optimize-autoloader --apcu-autoloader
        - php composer.phar dump-autoload --optimize --apcu
        - apk add --no-cache zlib-dev
        - docker-php-ext-configure zlib --with-dir/usr/local/zlib \
             && docker-php-ext-install zip
        - docker-php-ext-install zip
        - echo $GOOGLE_CLOUD_SERVICE_ACCOUNT_FILE > $CI_PROJECT_DIR/tests/_credentials/credentials.json
        - echo $GOOGLE_CLOUD_SERVICE_ACCOUNT_FILE > $CI_PROJECT_DIR/config/credentials/google/credentials.json
        - echo $GOOGLE_CLOUD_SERVICE_ACCOUNT_FILE > $CI_PROJECT_DIR/features/assets/_credentials/credentials.json
    script:
        - php composer.phar install -n -a -o
        - php composer.phar dump-autoload -a -o
        - php $CI_PROJECT_DIR/bin/console d:d:c --env=test
        - php $CI_PROJECT_DIR/bin/console d:s:c --env=test
        - php $CI_PROJECT_DIR/bin/console d:f:l -n --env=test
        - php $CI_PROJECT_DIR/bin/console doctrine:cache:clear-query
        - php $CI_PROJECT_DIR/bin/console doctrine:cache:clear-metadata
        - php $CI_PROJECT_DIR/bin/console app:translation-warm messages fr --env=test
        - php $CI_PROJECT_DIR/bin/console app:translation-warm messages en --env=test
        - php $CI_PROJECT_DIR/bin/console app:translation-warm validators fr --env=test
        - php $CI_PROJECT_DIR/bin/console app:translation-warm validators en --env=test
        - php $CI_PROJECT_DIR/vendor/bin/behat --profile core

behat_e2e:
    stage: functional
    image: php:fpm-alpine
    services:
        - redis
    before_script:
        - php -vv
        - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
        - php composer-setup.php
        - php -r "unlink('composer-setup.php');"
        - php composer.phar install -n --optimize-autoloader --apcu-autoloader
        - php composer.phar dump-autoload --optimize --apcu
        - apk add --no-cache zlib-dev
        - docker-php-ext-configure zlib --with-dir/usr/local/zlib \
             && docker-php-ext-install zip
        - docker-php-ext-install zip
        - echo $GOOGLE_CLOUD_SERVICE_ACCOUNT_FILE > $CI_PROJECT_DIR/tests/_credentials/credentials.json
        - echo $GOOGLE_CLOUD_SERVICE_ACCOUNT_FILE > $CI_PROJECT_DIR/config/credentials/google/credentials.json
        - echo $GOOGLE_CLOUD_SERVICE_ACCOUNT_FILE > $CI_PROJECT_DIR/features/assets/_credentials/credentials.json
    script:
        - php composer.phar install -n -a -o
        - php composer.phar dump-autoload -a -o
        - php $CI_PROJECT_DIR/bin/console d:d:c --env=test
        - php $CI_PROJECT_DIR/bin/console d:s:c --env=test
        - php $CI_PROJECT_DIR/bin/console d:f:l -n --env=test
        - php $CI_PROJECT_DIR/bin/console doctrine:cache:clear-query
        - php $CI_PROJECT_DIR/bin/console doctrine:cache:clear-metadata
        - php $CI_PROJECT_DIR/bin/console app:translation-warm messages fr --env=test
        - php $CI_PROJECT_DIR/bin/console app:translation-warm messages en --env=test
        - php $CI_PROJECT_DIR/bin/console app:translation-warm validators fr --env=test
        - php $CI_PROJECT_DIR/bin/console app:translation-warm validators en --env=test
        - php $CI_PROJECT_DIR/bin/console app:translation-warm session fr --env=test
        - php $CI_PROJECT_DIR/bin/console app:translation-warm session en --env=test
        - php $CI_PROJECT_DIR/vendor/bin/behat --profile e2e

blackfire:
    stage: performances
    image: php:fpm-alpine
    services:
        - redis
    before_script:
        - php -vv
        - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
        - php composer-setup.php
        - php -r "unlink('composer-setup.php');"
        - php composer.phar install -n --optimize-autoloader --apcu-autoloader
        - php composer.phar dump-autoload --optimize --apcu
        - apk add --no-cache zlib-dev
        - docker-php-ext-configure zlib --with-dir/usr/local/zlib \
             && docker-php-ext-install zip
        - docker-php-ext-install zip
        - echo $GOOGLE_CLOUD_SERVICE_ACCOUNT_FILE > $CI_PROJECT_DIR/tests/_credentials/credentials.json
        - echo $GOOGLE_CLOUD_SERVICE_ACCOUNT_FILE > $CI_PROJECT_DIR/config/credentials/google/credentials.json
        - echo $GOOGLE_CLOUD_SERVICE_ACCOUNT_FILE > $CI_PROJECT_DIR/features/assets/_credentials/credentials.json
    script:
        - php composer.phar install -a -o
        - php composer.phar dump-autoload -a -o
        - php $CI_PROJECT_DIR/bin/console d:d:c --env=test
        - php $CI_PROJECT_DIR/bin/console d:s:c --env=test
        - php $CI_PROJECT_DIR/bin/console d:f:l -n --env=test
        - php $CI_PROJECT_DIR/bin/console doctrine:cache:clear-query
        - php $CI_PROJECT_DIR/bin/console doctrine:cache:clear-metadata
        - php $CI_PROJECT_DIR/bin/phpunit -v --group Blackfire
