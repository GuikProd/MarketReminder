parameters:
    locale: 'fr'
    kernel.docker_dir: "%kernel.project_dir%/docker/config"
    kernel.images_dir: "%kernel.project_dir%/public/images/profiles"

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
            $bucketCredentialsFolder: "%kernel.project_dir%/config/credentials/google/bucket"
            $filePath: "%kernel.images_dir%"
            $bucketName: "%env(GOOGLE_BUCKET_NAME)%"
            $googleStoragePublicUrl: "%env(GOOGLE_STORAGE_URL)%"

    App\:
        resource: '../src/*'
        exclude: '../src/{Models,Migrations}'

    App\Action\:
        resource: '../src/Action'
        tags: ['controller.service_arguments']
#
#    graphql.image_resolver:
#        class: App\Resolvers\ImageResolver
#        arguments:
#            - '@doctrine.orm.entity_manager'
#        tags:
#            - { name: overblog_graphql.resolver, alias: 'image_resolver', method: getImage }
#
#    graphql.user_resolver:
#        class: App\Resolvers\UserResolver
#        arguments:
#            - '@doctrine.orm.entity_manager'
#        tags:
#            - { name: overblog_graphql.resolver, alias: 'user_resolver', method: getUser }
#
#    graphql.stock_resolver:
#        class: App\Resolvers\StockResolver
#        arguments:
#            - '@doctrine.orm.entity_manager'
#        tags:
#            - { name: overblog_graphql.resolver, alias: 'stock_resolver', method: getStock }
#
#    graphql.products_resolver:
#        class: App\Resolvers\ProductsResolver
#        arguments:
#            - '@doctrine.orm.entity_manager'
#        tags:
#            - { name: overblog_graphql.resolver, alias: 'products_resolver', method: getProduct }
#
#    graphql.user_mutator:
#        class: App\Mutators\UserMutator
#        tags:
#            - { name: overblog_graphql.mutation, method: register }
#            - { name: overblog_graphql.mutation, method: login }
#            - { name: overblog_graphql.mutation, method: forgotPassword }
#            - { name: overblog_graphql.mutation, method: dropUser }
#
#    graphql.image_mutator:
#        class: App\Mutators\ImageMutator
#        tags:
#            - { name: overblog_graphql.mutation, alias: 'image_creation', method: createImage }
#
#    graphql.stock_mutator:
#        class: App\Mutators\StockMutator
#        tags:
#            - { name: overblog_graphql.mutation, alias: 'stock_creation', method: createStock }
