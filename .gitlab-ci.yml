stages:
    - frontend
    - quality
    - unit_tests
    - functional_tests
    - deployment

#encore:
#    stage: frontend
#    image: node:alpine
#    before_script:
#        - yarn install
#    script:
#        - ./node_modules/.bin/encore production
#    cache:
#        paths:
#            - node_modules/
#            - public/build/

deptrac:
    stage: quality
    image: php:fpm-alpine
    before_script:
        - curl -LS http://get.sensiolabs.de/deptrac.phar -o deptrac.phar
        - chmod +x deptrac.phar
        - mv ./deptrac.phar /usr/bin/deptrac
        - deptract

phpunit:
    stage: unit_tests
    image: php:fpm-alpine
    before_script:
        - set -xe \
              && apk add --no-cache --virtual .build-deps \
                  $PHPIZE_DEPS \
                  icu-dev \
                  postgresql-dev \
                  zlib-dev \
                  gnupg \
                  graphviz \
                  make \
                  autoconf \
                  git \
              && docker-php-ext-install \
                  intl \
                  pdo_pgsql \
                  zip \
              && pecl install apcu \
                  && docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql \
                  && docker-php-ext-install pdo_mysql opcache json pdo_pgsql pgsql mysqli \
                  && docker-php-ext-enable apcu mysqli \
              && runDeps="$( \
                  scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \
                   | tr ',' '\n' \
                   | sort -u \
                   | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
              )" \
              && apk add --no-cache --virtual .php-phpexts-rundeps $runDeps \
              && apk del .build-deps
        - cp docker/php/conf/production/php.ini /usr/local/etc/php/php.ini
