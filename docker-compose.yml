version: "3.6"

services:
    # Core configuration
    php-fpm:
        container_name: ${CONTAINER_NAME}_php-fpm
        build:
            cache_from:
                - 'php:fpm-alpine'
            context: .
            target: base
            args:
                WORKFOLDER: "${WORKPATH}"
        env_file: .env
        environment:
            BLACKFIRE_LOG_LEVEL: 4
            BLACKFIRE_SERVER_ID: '${BLACKFIRE_SERVER_ID}'
            BLACKFIRE_SERVER_TOKEN: '${BLACKFIRE_SERVER_TOKEN}'
        ports:
            - '${PHP_PORT}:9000'
        volumes:
            - './:${WORKPATH}:rw,delegated'
            - './docker/php/conf/php.ini:/usr/local/etc/php/php.ini'
            # - './docker/php/conf/production/php.ini:/usr/local/etc/php/php.ini' -> Used for production.
        restart: always

    nginx:
        container_name: ${CONTAINER_NAME}_nginx
        image: nginx
        env_file: .env
        ports:
            - '${NGINX_PORT}:80'
        links:
            - php-fpm
        volumes:
            - './:${WORKPATH}:rw'
            - './docker/nginx/conf/core/nginx.conf:/etc/nginx/nginx.conf'
            - './docker/nginx/conf/development/marketReminder.conf:/etc/nginx/conf.d/default.conf'
            # - './docker/nginx/conf/production/marketReminder.conf:/etc/nginx/conf.d/default.conf' -> Uncomment this line for production.
            - './docker/nginx/logs/:/var/log/nginx'
        restart: always

    # Frontend configuration
    node:
        container_name: ${CONTAINER_NAME}_nodejs
        build:
            context: './docker/node'
            cache_from:
                - 'node:8'
        env_file: .env
        ports:
            - 3000:3000
        volumes:
            - './:/usr/src/app:rw,delegated'
        entrypoint: "yarn watch"
        restart: always

    # Server optimization
    varnish:
        container_name: ${CONTAINER_NAME}_varnish
        build:
            cache_from:
                - 'alpine:3.6'
            context: './docker/varnish'
        env_file: .env
        volumes:
            - './docker/varnish/conf:/etc/varnish:rw,cached'
        ports:
            - '${VARNISH_PORT}:80'
        depends_on:
            - nginx
        restart: always

    redis:
        container_name: ${CONTAINER_NAME}_redis
        image: redis:alpine
        env_file: .env
        ports:
            - '${REDIS_PORT}:6379'
        links:
            - php-fpm
        restart: always

    # DB configuration
    mysql:
        container_name: ${CONTAINER_NAME}_mysql
        image: mysql:5.7
        env_file: .env
        ports:
            - '3306:3306'
        environment:
            MYSQL_DATABASE: '${MYSQL_DBNAME}'
            MYSQL_USER: '${MYSQL_USER}'
            MYSQL_PASSWORD: '${MYSQL_PASSWORD}'
            MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
        volumes:
            - 'mysql:/var/lib/mysql'
        restart: always

    postgresql:
        container_name: ${CONTAINER_NAME}_postgresql
        image: postgres:9.6-alpine
        env_file: .env
        environment:
            POSTGRES_DB: '${POSTGRES_DB}'
            POSTGRES_USER: '${POSTGRES_USER}'
            POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
        ports:
            - '${POSTGRES_PORT}:5432'
        volumes:
            - 'db-data:/var/lib/postgresql/data:rw'
        restart: always

    # Performances configuration
    blackfire:
        container_name: ${CONTAINER_NAME}_blackfire
        image: blackfire/blackfire
        env_file: .env
        environment:
            BLACKFIRE_LOG_LEVEL: 4
            BLACKFIRE_SERVER_ID: '${BLACKFIRE_SERVER_ID}'
            BLACKFIRE_SERVER_TOKEN: '${BLACKFIRE_SERVER_TOKEN}'
            BLACKFIRE_CLIENT_ID: '${BLACKFIRE_CLIENT_ID}'
            BLACKFIRE_CLIENT_TOKEN: '${BLACKFIRE_CLIENT_TOKEN}'
        links:
            - php-fpm
        volumes:
            - './:${WORKPATH}:rw,cached'
        restart: always

volumes:
    db-data: {}
    mysql:
